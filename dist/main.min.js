"use strict";var request=require("umi-request"),fs=require("fs"),ejs=require("ejs"),path=require("path");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var request__default=_interopDefaultLegacy(request),fs__default=_interopDefaultLegacy(fs),ejs__default=_interopDefaultLegacy(ejs);const getAllDeps=e=>e.split("<").map((e=>e.replace(/>/g,"").replace(/\[\]/g,""))),toGenericsTypes=e=>e.replace(/«/g,"<").replace(/»/g,">"),toGenerics=e=>1===e.length?e[0]:`${e.join("<")}${e.slice(1).map((()=>">")).join("")}`,removeGenericsSign=e=>e.replace(/<T>/g,""),removeArraySign=e=>e.replace(/\[\]/g,""),getType=(e,t)=>{if(!e)return"any";const{type:r}=e;if(!r&&e.originalRef)return e.originalRef;return["int64","integer","long","float","double","number","int","float","double","int32","int64"].includes(r)?"number":["Date","date","dateTime","date-time","datetime"].includes(r)||["string","email","password","url","byte","binary"].includes(r)?"string":"boolean"===r?"boolean":"object"===r?t?"T":e.originalRef??e.additionalProperties?.type??"any":"array"===r?t?"T[]":`${e.items.originalRef??getType(e.items)}[]`:"any"},getParams=(e,t)=>{if(!e||0===e.length)return[];if("body"===e[0]?.in){const r=e?.[0]?.schema.originalRef,n=t[r]?.properties;return Object.keys(n).map((e=>{const t=n[e];return{in:"body",name:e,type:getType(t,!1),description:t.description,required:!1}}))}return e.map((e=>({in:e.in,name:e.name,type:getType(e,!1),description:e.description,required:e.required})))},getUrlText=e=>e.includes("{")?`\`${e.replace(/{/g,"${pathVars.")}\``:`'${e}'`,getApis=(e,t)=>{const r=(e,r)=>{const n=e[200];if(n.schema?.type)return getType(n.schema);if(n.schema?.originalRef){const e=n.schema?.originalRef?.replace(/«/g,"<").replace(/»/g,">"),s=getAllDeps(e);if(1===s.length&&r.includes(e))return e+"<any>";const a=t.map((e=>removeGenericsSign(e.name)));for(let e=0;e<s.length;e++)a.includes(s[e])||(s[e]="any");return toGenerics(s)}return"any"},n=[];return Object.keys(e.paths).forEach((s=>{const a=e.paths[s];Object.keys(a).forEach((i=>{const o=a[i],p=getParams(o.parameters,e.definitions);n.push({tag:o.tags?.[0],name:o.operationId,description:o.summary,request:{url:s,urlText:getUrlText(s),method:i.toUpperCase(),params:p,filter:{path:p.filter((e=>"path"===e.in)),query:p.filter((e=>"query"===e.in)),body:p.filter((e=>"body"===e.in)),formdata:p.filter((e=>"formdata"===e.in))}},response:{type:r(o.responses,t.filter((e=>e.isGenerics)).map((e=>removeGenericsSign(e.name))))}})}))})),n},getTypeParams=(e,t)=>Object.keys(e).map((r=>{const n=e[r];return{isGenerics:t,name:r,type:getType(n,t),description:n.description,required:!1}})),getTypes=e=>{const t=e.definitions||{},r=new Set;Object.keys(t).forEach((e=>{const t=e.split("«");t.pop(),t.forEach((e=>r.add(e)))}));const n=[];return Object.keys(t).forEach((e=>{let s=e;const a=getAllDeps(toGenericsTypes(e));a.length>1&&(s=a[0]);const i=t[e];var o,p;if(i.properties&&!n.some((e=>removeGenericsSign(e.name)===s))){const e=r.has(s);n.push({isGenerics:e,name:e?`${s}<T>`:s,description:i.description||"",params:(o=i.properties,p=e,Object.keys(o).map((e=>{const t=o[e];return{isGenerics:p,name:e,type:getType(t,p),description:t.description,required:!1}})))})}})),n},renderFile=(e,t)=>new Promise(((r,n)=>{ejs__default.default.renderFile(e,t,{},((e,t)=>{e&&n(e.message),r(t)}))})),generateService=async(e,t)=>{const r=getTypes(e),n=path.resolve(__dirname,"../","src","template","type.ejs");await renderFile(n,{types:r}),path.resolve(t,"typings.ts");const s=getApis(e,r),a=new Map;e.tags?.forEach((e=>{a.set(e.name,[])})),s.forEach((e=>a.get(e.tag)?.push(e))),a.forEach((async(e,n)=>{const s=path.resolve(__dirname,"../","src","template","umi-request.ejs"),a=new Set;e.forEach((e=>{e.request.params.forEach((e=>{const t=e.type.replace(/\[\]/g,"");r.some((e=>removeGenericsSign(e.name)===t))&&a.add(t)})),getAllDeps(e.response.type).forEach((e=>{r.some((t=>removeGenericsSign(t.name)===e))&&a.add(e)}))}));const i=await renderFile(s,{deps:a,apis:e}),o=path.resolve(t,`${n}.ts`);fs__default.default.writeFileSync(o,i)}))},generate=async e=>{const{data:t,url:r,outputDir:n}=e;if(!t&&!r)throw new Error("please input either data or url!");if(!n)throw new Error("please input outputDir!");let s={};r&&(s=await request__default.default.get(r)),t&&(s=JSON.parse(t)),generateService(s,n)};module.exports=generate;